plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'maven-publish'
}

apply from: 'versioning.gradle'

version = getCurrentVersion()
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven { url "https://maven.teamresourceful.com/repository/maven-public/" }
    maven { url "https://jitpack.io" }
    maven { url "https://maven.ladysnake.org/releases" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven { url "https://api.modrinth.com/maven" }

    maven { url "https://theo.is-a.dev/maven/" }
    maven { url 'https://maven.isxander.dev/releases' }

}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation("earth.terrarium.adastra:ad_astra-fabric-${project.minecraft_version}:${project.adastra_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modImplementation "dev.drtheo:multidim:${project.multidim_version}"
    modImplementation "dev.drtheo:scheduler:${project.scheduler_version}"
    modImplementation "dev.drtheo:queue:${project.queue_version}"

    modImplementation "com.github.amblelabs:ait:6c2922e3d2"
    modImplementation "dev.isxander:yet-another-config-lib:${project.yacl_version}"

    modImplementation("com.github.amblelabs:modkit:v${project.amblekit_version}")
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    inputs.property "amblekit_version", project.amblekit_version
    inputs.property "yacl_version", project.yacl_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version,
                "yacl_version": project.yacl_version,
                "amblekit_version": project.amblekit_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }

    // exclude assets if it's a beta dev build
    if (System.hasProperty("BETA")) {
        processResources.exclude("assets")
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
